/* stylelint-disable
  selector-max-class,
  scss/selector-no-redundant-nesting-selector,
  max-nesting-depth,
  selector-max-combinators,
  selector-max-compound-selectors,
  no-descending-specificity,
  at-rule-no-unknown,
  selector-no-qualifying-type,
  declaration-block-no-redundant-longhand-properties,
  declaration-no-important
*/
*, *:before, *:after{
  box-sizing:border-box;
}
@media (prefers-reduced-motion: reduce){
  *, *:before, *:after{
    animation-duration:0.01ms !important;
    animation-iteration-count:1 !important;
    transition-duration:0.01ms !important;
  }
}
*:focus-visible{
  outline:0;
}
*:focus-visible{
  outline:0;
}

:focus:not(:focus-visible){
  outline:3px solid transparent;
}

.util_displayInline{
  display:inline;
}

.util_displayInlineBlock{
  display:inline-block;
}

.util_displayBlock, :host{
  display:block;
}

.util_displayFlex{
  display:flex;
}

.util_displayHidden, :host([hidden]:not(:focus):not(:active)){
  display:none;
}

.util_displayHiddenVisually, :host([hiddenVisually]:not(:focus):not(:active)){
  position:absolute;
  overflow:hidden;
  clip:rect(1px, 1px, 1px, 1px);
  width:1px;
  height:1px;
  padding:0;
  border:0;
}

/* stylelint-disable  selector-max-attribute, max-nesting-depth, selector-max-class, selector-max-combinators, selector-max-compound-selectors */
.typeIcon{
  display:flex;
  flex-direction:row;
  align-items:center;
}
.typeIcon [auro-icon]{
  height:var(--ds-size-300, 1.5rem);
  width:var(--ds-size-300, 1.5rem);
  margin-right:var(--ds-size-100, 0.5rem);
}

.notificationIcons{
  display:flex;
  flex-direction:row;
  padding-right:var(--ds-size-100, 0.5rem);
}

:host([bordered]) .typeIcon{
  padding-left:var(--ds-size-100, 0.5rem);
}
:host([bordered]) .notificationIcons{
  align-items:center;
}

.notification:not(:first-of-type){
  margin-left:var(--ds-size-100, 0.5rem);
}

.alertNotification{
  height:calc(var(--ds-size-200, 1rem) + var(--ds-size-25, 0.125rem));
  width:calc(var(--ds-size-200, 1rem) + var(--ds-size-25, 0.125rem));
}

.clearBtn{
  height:calc(var(--ds-size-200, 1rem) + var(--ds-size-25, 0.125rem));
  width:calc(var(--ds-size-200, 1rem) + var(--ds-size-25, 0.125rem));
}

.passwordBtn{
  height:calc(var(--ds-size-300, 1.5rem));
  width:calc(var(--ds-size-300, 1.5rem));
}

.notificationBtn{
  display:block;
  padding:0;
  border:0;
  background:unset;
  cursor:pointer;
  height:var(--ds-size-200, 1rem);
  width:var(--ds-size-200, 1rem);
}
.notificationBtn [auro-icon]{
  display:block;
  height:var(--ds-size-200, 1rem);
  width:var(--ds-size-200, 1rem);
}
.notificationBtn [auro-icon][hidden]{
  display:none;
}

:host(:not([bordered])) .typeIcon,
:host(:not([bordered])) .notificationIcons{
  align-items:flex-end;
  padding-bottom:var(--ds-size-50, 0.25rem);
}

:host(:focus-within[type=password]) .notificationIcons[hasValue] .alertNotification{
  visibility:hidden;
  height:0;
  width:0;
  overflow:hidden;
  margin:0;
  padding:0;
}

.inputElement-helpText{
  margin:var(--ds-size-50, 0.25rem) 0;
  font-size:var(--ds-text-body-size-xs, 0.75rem);
  line-height:var(--ds-size-200, 1rem);
}

/* stylelint-disable no-duplicate-selectors, max-nesting-depth, no-descending-specificity */
input{
  border:unset;
}

.wrapper{
  border-style:solid;
  overflow:hidden;
  position:relative;
}

:host(:not([bordered], [borderless])) .wrapper{
  border-width:1px 0;
}

:host([bordered]) .wrapper{
  border-width:1px;
  border-radius:var(--ds-border-radius, 0.375rem);
}

:host(:not([borderless])) .wrapper:focus-within:before{
  display:block;
  content:"";
  position:absolute;
  inset:0;
  pointer-events:none;
  /* stylelint-disable declaration-block-no-redundant-longhand-properties */
  border-bottom-style:solid;
  border-bottom-width:1px;
  /* stylelint-enable declaration-block-no-redundant-longhand-properties */
}

:host([validity]:not([validity=valid])) .wrapper:before{
  border-bottom:0;
}

/* stylelint-disable no-duplicate-selectors, max-nesting-depth, no-descending-specificity, selector-max-combinators, selector-max-compound-selectors, selector-no-qualifying-type */
label{
  position:absolute;
  transition:all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  overflow:hidden;
  white-space:nowrap;
  text-overflow:ellipsis;
  pointer-events:none;
}

:host(:not([bordered])) label{
  top:calc(100% - var(--ds-size-25, 0.125rem));
  transform:translateY(-100%);
}
:host(:not([bordered])) label.withIcon{
  left:var(--ds-size-400, 2rem);
}

:host([bordered]) label{
  top:50%;
  transform:translateY(-50%);
}
:host([bordered]) label.withIcon{
  left:var(--ds-size-500, 2.5rem);
}
:host([bordered]) label:not(label.withIcon){
  left:var(--ds-size-100, 0.5rem);
}

:host .wrapper:focus-within label{
  top:var(--ds-size-25, 0.125rem);
  transform:unset;
  font-size:var(--ds-text-body-size-xs, 0.75rem);
}
:host label.withValue{
  top:var(--ds-size-25, 0.125rem);
  transform:unset;
  font-size:var(--ds-text-body-size-xs, 0.75rem);
}

:host([activeLabel]) .wrapper label{
  top:var(--ds-size-25, 0.125rem);
  transform:unset;
  font-size:var(--ds-text-body-size-xs, 0.75rem);
}

:host{
  --size-lgsm:1.875rem;
  --size-xlsm:2.75rem;
  --size-mdxxs:1.2rem;
  position:relative;
  display:block;
}

.wrapper{
  display:flex;
  flex-direction:row;
}

.main{
  display:flex;
  flex-direction:row;
  position:relative;
  flex:1;
}

input{
  flex:1;
  position:relative;
  min-height:calc(var(--ds-size-700, 3.5rem) + var(--ds-size-25, 0.125rem));
  max-height:calc(var(--ds-size-700, 3.5rem) + var(--ds-size-25, 0.125rem));
  padding:var(--ds-size-400, 2rem) 0 var(--ds-size-50, 0.25rem);
  white-space:nowrap;
  overflow:hidden;
  text-overflow:ellipsis;
  margin:0;
  font-family:var(--ds-font-family-default, "AS Circular", Helvetica Neue, Arial, sans-serif);
  font-size:var(--ds-size-200, 1rem);
  transition:all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
  outline:none;
}
input::-ms-reveal, input::-ms-clear{
  display:none;
}
input:disabled{
  pointer-events:none;
  background:none;
}
